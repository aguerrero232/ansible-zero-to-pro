- 
  name: ships setup
  hosts: ships
  vars: 
    date: "{{ ansible_date_time.date }}"
    play_name: "{{ ansible_play_name }}"
    log_dir: "/target_logs"
    log: "play-name: {{ansible_play_name}}, host-name: {{ansible_hostname}}, datetime: {{ansible_date_time}}"
  tasks:

    - name: make sure {{log_dir}} is there
      command: "mkdir -p {{log_dir}}"
      register: dir_status

    - debug:
        msg: " ✔️  dir: {{log_dir}} exists..."
      when: dir_status is success 

    - debug:
        msg: " ❌  couldn't confirm {{log_dir}} existence..."
      when: dir_status is failed

    - name: make sure {{log_dir}}/{{inventory_hostname}}-ship.txt is there
      command: "touch {{log_dir}}/{{inventory_hostname}}-ship.txt"
      register: file_status
      when: dir_status is success

    - debug:
        msg: " ✔️  file: {{log_dir}}/{{inventory_hostname}}-ship.txt is located..."
      when: file_status is success 

    - debug:
        msg: " ❌  couldn't locate {{log_dir}}/{{inventory_hostname}}-ship.txt..."
      when: file_status is failed

    - name: write logs
      copy: 
        content: "{{log}}"
        dest: "{{log_dir}}/{{inventory_hostname}}-ship.txt"
      register: write_status
      when: file_status is success

    - name: finishing ships setup
      ansible.builtin.debug:
        msg: "{{write_status}}"

-
  name: pilots setup 
  hosts: pilots
  vars:
    play_name: "{{ ansible_play_name }}"
    log_dir: "/target_logs"
    log: "play-name: {{ansible_play_name}}, host-name: {{ansible_hostname}}, datetime: {{ansible_date_time}}"
  tasks:
    
    - name: create pilots dir
      command: "mkdir -p {{log_dir}}"
      register: dir_status
    
    - debug:
        msg: " ✔️ {{log_dir}} confirmed..."
      when: dir_status is success 

    - debug:
        msg: " ❌  couldn't confirm {{log_dir}} existence..."
      when: dir_status is failed

    - name: create pilot file
      command: "touch {{log_dir}}/{{inventory_hostname}}-pilot.txt"
      register: file_status
      when: dir_status is success

    - debug:
        msg: " ✔️  file: {{log_dir}}/{{inventory_hostname}}-pilot.txt is located..."
      when: file_status is success 

    - debug:
        msg: " ❌  couldn't locate {{log_dir}}/{{inventory_hostname}}-pilot.txt..."
      when: file_status is failed

    - name: write logs
      copy: 
        content: "{{log}}"
        dest: "{{log_dir}}/{{inventory_hostname}}-pilot.txt"
      register: write_status
      when: file_status is success

    - name: finishing pilots setup
      ansible.builtin.debug:
        msg: "{{write_status}}"

-
  name: nslookup google
  hosts: pilots
  vars:
    play_name: "{{ ansible_play_name }}"
  tasks:
    
    - name: printing tast
      ansible.builtin.debug:
        msg: "attempting nslookup of google.com..."

    - shell: nslookup google.com
      register: result
      ignore_errors: True

    - debug:
        msg: " ❌  command failed..."
      when: result is failed 

    - debug:
        msg: " 🔎  status changed..."
      when: result is changed

    - debug:
        msg: " ⏭️  command was skipped..."
      when: result is skipped

    - debug:
        msg: " ✔️  command succeeded..."
      when: result is success

    - shell: dnf provides nslookup -q
      register: result2
      ignore_errors: True
      when: result is failed
    
    - name: saving provides command result
      command: "echo {{ result2.stdout_lines[0] | regex_search('(.*)-[0-9]:?', '\\1') | first  }}"
      register: command_package
      when: result2 is success and result is failed 
    
    - name: printing provides command result
      ansible.builtin.debug:
        msg: " 📦 found {{ command_package.stdout_lines[0] }}, attempting to install..."
      when: result2 is success and result is failed and command_package is defined

    - name: installing command package
      command: "dnf -y install {{ command_package.stdout_lines[0] }}"
      when: result2 is success and result is failed and command_package is defined
    
    - debug:
        msg: " ✔️  package install complete..."
      when: result2 is success 

    - debug:
        msg: " ❌  package install failed..."
      when: result2 is failed

    - name: retry nslookup after fail and install
      command: "nslookup google.com"
      register: result 
      ignore_errors: true
      when: result2 is success

    - name: finishing nslookup
      ansible.builtin.debug:
        msg: "{{ result }}"

-
  name: reading ship logs
  hosts: ships
  vars:
    play_name: "{{ ansible_play_name }}"
    log_dir: "/target_logs"
  tasks:
    - name: reading all ship logs
      command: "cat {{log_dir}}/{{inventory_hostname}}-ship.txt"
      register: result
      ignore_errors: True

    - name: print reading results
      ansible.builtin.debug:
        msg: "{{ result.stdout }}"
      when: result is success
    
    - name: finishing succsesscle
      ansible.builtin.debug:
        msg: " ✔️ {{play_name}} finished..."
      when: result is success
